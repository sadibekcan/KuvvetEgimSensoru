
KuvvetEgimSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000852  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  00000852  000008e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  008000c2  008000c2  00000948  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000948  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003b2  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000284  00000000  00000000  00000d9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001d7  00000000  00000000  00001022  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000bc  00000000  00000000  000011fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000260  00000000  00000000  000014c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001720  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e5       	ldi	r30, 0x52	; 82
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3c       	cpi	r26, 0xC2	; 194
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 ec       	ldi	r26, 0xC2	; 194
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 3c       	cpi	r26, 0xC8	; 200
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 99 00 	call	0x132	; 0x132 <main>
  8a:	0c 94 27 04 	jmp	0x84e	; 0x84e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <gonder>:

void gonder(char kar)
{
	//loop_until_bit_is_set(UCSRA, UDRE); // ucsra nýn 5. yazmacý olan udre
	// 1 olduðunda, yeni veri için boþ olduðunu gösterir. eðer boþsa gönder iþlemi yapýlýr
	while (!(UCSRA&(1<<UDRE)));			// 2. yol
  92:	5d 9b       	sbis	0x0b, 5	; 11
  94:	fe cf       	rjmp	.-4      	; 0x92 <gonder>
	
	UDR = kar;							// Gönderme ve alma UDR den geçer.
  96:	8c b9       	out	0x0c, r24	; 12
  98:	08 95       	ret

0000009a <al>:

int al(char kar)
{
	//loop_until_bit_is_set(UCSRA,RXC); // UCSRA içindeki 7. bitinde bulunan RXC yazmacý akitif olduðunda kullan
	
	while (!(UCSRA & (1<<RXC)));
  9a:	5f 9b       	sbis	0x0b, 7	; 11
  9c:	fe cf       	rjmp	.-4      	; 0x9a <al>
	return kar= UDR;
  9e:	8c b1       	in	r24, 0x0c	; 12
}
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	08 95       	ret

000000a4 <adc_yukle>:
                                ADC Functions
********************************************************************************/
void adc_yukle()
{
	// AREF = AVcc
	ADMUX = (1<<REFS0);
  a4:	80 e4       	ldi	r24, 0x40	; 64
  a6:	87 b9       	out	0x07, r24	; 7
	
	// ADC Enable and prescaler of 128
	// 16000000/128 = 125000
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
  a8:	87 e8       	ldi	r24, 0x87	; 135
  aa:	86 b9       	out	0x06, r24	; 6
  ac:	08 95       	ret

000000ae <adc_oku>:
{
	// select the corresponding channel 0~7
	// ANDing with ’7? will always keep the value
	// of ‘ch’ between 0 and 7
	pin &= 0b00000111;  // AND operation with 7
	ADMUX = (ADMUX & 0xF8)|pin; // clears the bottom 3 bits before ORing
  ae:	97 b1       	in	r25, 0x07	; 7
uint16_t adc_oku(uint8_t pin)
{
	// select the corresponding channel 0~7
	// ANDing with ’7? will always keep the value
	// of ‘ch’ between 0 and 7
	pin &= 0b00000111;  // AND operation with 7
  b0:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8)|pin; // clears the bottom 3 bits before ORing
  b2:	98 7f       	andi	r25, 0xF8	; 248
  b4:	98 2b       	or	r25, r24
  b6:	97 b9       	out	0x07, r25	; 7
	
	// start single convertion
	// write ’1? to ADSC
	ADCSRA |= (1<<ADSC);
  b8:	36 9a       	sbi	0x06, 6	; 6
	
	// wait for conversion to complete
	// ADSC becomes ’0? again
	// till then, run loop continuously
	while(ADCSRA & (1<<ADSC));
  ba:	36 99       	sbic	0x06, 6	; 6
  bc:	fe cf       	rjmp	.-4      	; 0xba <adc_oku+0xc>
	
	return (ADC);
  be:	84 b1       	in	r24, 0x04	; 4
  c0:	95 b1       	in	r25, 0x05	; 5
}
  c2:	08 95       	ret

000000c4 <seri_yukle>:
FILE data= FDEV_SETUP_STREAM(gonder, al, _FDEV_SETUP_RW);//(gönderilen, alýnan, Etkilenen Bayrak)) / _FDEV_SETUP_RW= okuma - yazma



void seri_yukle(uint16_t CPU_MHZ,uint16_t BAUD )
{
  c4:	0f 93       	push	r16
  c6:	1f 93       	push	r17
  c8:	fb 01       	movw	r30, r22
	int ubrr=(CPU_MHZ*1000000)/16/BAUD-1;
	stdout=stdin=&data; //standart girdi ve ciktiyi veriler degiskenine yonlendir
  ca:	20 e6       	ldi	r18, 0x60	; 96
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	30 93 c3 00 	sts	0x00C3, r19
  d2:	20 93 c2 00 	sts	0x00C2, r18
  d6:	30 93 c5 00 	sts	0x00C5, r19
  da:	20 93 c4 00 	sts	0x00C4, r18
	UCSRA=0x00; // Senkron için kullanýlýr. asenkron yaptýðým için kapalý
  de:	1b b8       	out	0x0b, r1	; 11
	UCSRB=0x18; // 00011000 - TXEN - PD0 pini Alýcý olur / RXEN - PD1 pini Gönderir
  e0:	28 e1       	ldi	r18, 0x18	; 24
  e2:	2a b9       	out	0x0a, r18	; 10
	UCSRC=0x86; // 10000110 - UCSZ0 / UCSZ1 / ursel akitf.
  e4:	26 e8       	ldi	r18, 0x86	; 134
  e6:	20 bd       	out	0x20, r18	; 32
	UBRRH=0x00;
  e8:	10 bc       	out	0x20, r1	; 32



void seri_yukle(uint16_t CPU_MHZ,uint16_t BAUD )
{
	int ubrr=(CPU_MHZ*1000000)/16/BAUD-1;
  ea:	dc 01       	movw	r26, r24
  ec:	20 e4       	ldi	r18, 0x40	; 64
  ee:	32 e4       	ldi	r19, 0x42	; 66
  f0:	4f e0       	ldi	r20, 0x0F	; 15
  f2:	50 e0       	ldi	r21, 0x00	; 0
  f4:	0e 94 28 01 	call	0x250	; 0x250 <__muluhisi3>
  f8:	8b 01       	movw	r16, r22
  fa:	9c 01       	movw	r18, r24
  fc:	99 23       	and	r25, r25
  fe:	24 f4       	brge	.+8      	; 0x108 <seri_yukle+0x44>
 100:	01 5f       	subi	r16, 0xF1	; 241
 102:	1f 4f       	sbci	r17, 0xFF	; 255
 104:	2f 4f       	sbci	r18, 0xFF	; 255
 106:	3f 4f       	sbci	r19, 0xFF	; 255
 108:	c9 01       	movw	r24, r18
 10a:	b8 01       	movw	r22, r16
 10c:	68 94       	set
 10e:	13 f8       	bld	r1, 3
 110:	95 95       	asr	r25
 112:	87 95       	ror	r24
 114:	77 95       	ror	r23
 116:	67 95       	ror	r22
 118:	16 94       	lsr	r1
 11a:	d1 f7       	brne	.-12     	; 0x110 <seri_yukle+0x4c>
 11c:	9f 01       	movw	r18, r30
 11e:	40 e0       	ldi	r20, 0x00	; 0
 120:	50 e0       	ldi	r21, 0x00	; 0
 122:	0e 94 09 01 	call	0x212	; 0x212 <__divmodsi4>
 126:	21 50       	subi	r18, 0x01	; 1
 128:	31 09       	sbc	r19, r1
	stdout=stdin=&data; //standart girdi ve ciktiyi veriler degiskenine yonlendir
	UCSRA=0x00; // Senkron için kullanýlýr. asenkron yaptýðým için kapalý
	UCSRB=0x18; // 00011000 - TXEN - PD0 pini Alýcý olur / RXEN - PD1 pini Gönderir
	UCSRC=0x86; // 10000110 - UCSZ0 / UCSZ1 / ursel akitf.
	UBRRH=0x00;
	UBRRL=ubrr; // Baðlantý hýzý
 12a:	29 b9       	out	0x09, r18	; 9
}
 12c:	1f 91       	pop	r17
 12e:	0f 91       	pop	r16
 130:	08 95       	ret

00000132 <main>:
int main(void)
{
	int kosPin;
	int kosReading;
	
	adc_yukle();
 132:	0e 94 52 00 	call	0xa4	; 0xa4 <adc_yukle>
	seri_yukle(16,19200);
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	7b e4       	ldi	r23, 0x4B	; 75
 13a:	80 e1       	ldi	r24, 0x10	; 16
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 62 00 	call	0xc4	; 0xc4 <seri_yukle>
	
    while(1)
    {
		kosReading =adc_oku(0);
		kosPin = kosReading;	
		printf("Analog deger = %i ",kosReading);
 142:	ce e6       	ldi	r28, 0x6E	; 110
 144:	d0 e0       	ldi	r29, 0x00	; 0
		else if (kosReading < 800)
		{
			printf("orta derece sikma");
		}
		else {
			printf("büyük sikma");
 146:	0f 2e       	mov	r0, r31
 148:	f6 eb       	ldi	r31, 0xB6	; 182
 14a:	af 2e       	mov	r10, r31
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	bf 2e       	mov	r11, r31
 150:	f0 2d       	mov	r31, r0
		{
			printf("hafif sikma");
		}
		else if (kosReading < 800)
		{
			printf("orta derece sikma");
 152:	0f 2e       	mov	r0, r31
 154:	f4 ea       	ldi	r31, 0xA4	; 164
 156:	cf 2e       	mov	r12, r31
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	df 2e       	mov	r13, r31
 15c:	f0 2d       	mov	r31, r0
		{
			printf("hafif dokunma");
		}
		else if (kosReading < 500)
		{
			printf("hafif sikma");
 15e:	0f 2e       	mov	r0, r31
 160:	f8 e9       	ldi	r31, 0x98	; 152
 162:	8f 2e       	mov	r8, r31
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	9f 2e       	mov	r9, r31
 168:	f0 2d       	mov	r31, r0
		{
			printf("eðim yok");
		}
		else if (kosReading < 200)
		{
			printf("hafif dokunma");
 16a:	0f 2e       	mov	r0, r31
 16c:	fa e8       	ldi	r31, 0x8A	; 138
 16e:	ef 2e       	mov	r14, r31
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	ff 2e       	mov	r15, r31
 174:	f0 2d       	mov	r31, r0
		kosReading =adc_oku(0);
		kosPin = kosReading;	
		printf("Analog deger = %i ",kosReading);
		if (kosReading < 10)
		{
			printf("eðim yok");
 176:	01 e8       	ldi	r16, 0x81	; 129
 178:	10 e0       	ldi	r17, 0x00	; 0
	adc_yukle();
	seri_yukle(16,19200);
	
    while(1)
    {
		kosReading =adc_oku(0);
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	0e 94 57 00 	call	0xae	; 0xae <adc_oku>
 180:	3c 01       	movw	r6, r24
		kosPin = kosReading;	
		printf("Analog deger = %i ",kosReading);
 182:	7f 92       	push	r7
 184:	8f 93       	push	r24
 186:	df 93       	push	r29
 188:	cf 93       	push	r28
 18a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <printf>
		if (kosReading < 10)
 18e:	0f 90       	pop	r0
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	0f 90       	pop	r0
 196:	9a e0       	ldi	r25, 0x0A	; 10
 198:	69 16       	cp	r6, r25
 19a:	71 04       	cpc	r7, r1
 19c:	3c f4       	brge	.+14     	; 0x1ac <main+0x7a>
		{
			printf("eðim yok");
 19e:	1f 93       	push	r17
 1a0:	0f 93       	push	r16
 1a2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <printf>
 1a6:	0f 90       	pop	r0
 1a8:	0f 90       	pop	r0
 1aa:	29 c0       	rjmp	.+82     	; 0x1fe <main+0xcc>
		}
		else if (kosReading < 200)
 1ac:	28 ec       	ldi	r18, 0xC8	; 200
 1ae:	62 16       	cp	r6, r18
 1b0:	71 04       	cpc	r7, r1
 1b2:	3c f4       	brge	.+14     	; 0x1c2 <main+0x90>
		{
			printf("hafif dokunma");
 1b4:	ff 92       	push	r15
 1b6:	ef 92       	push	r14
 1b8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <printf>
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	1e c0       	rjmp	.+60     	; 0x1fe <main+0xcc>
		}
		else if (kosReading < 500)
 1c2:	84 ef       	ldi	r24, 0xF4	; 244
 1c4:	68 16       	cp	r6, r24
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	78 06       	cpc	r7, r24
 1ca:	3c f4       	brge	.+14     	; 0x1da <main+0xa8>
		{
			printf("hafif sikma");
 1cc:	9f 92       	push	r9
 1ce:	8f 92       	push	r8
 1d0:	0e 94 64 01 	call	0x2c8	; 0x2c8 <printf>
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
 1d8:	12 c0       	rjmp	.+36     	; 0x1fe <main+0xcc>
		}
		else if (kosReading < 800)
 1da:	90 e2       	ldi	r25, 0x20	; 32
 1dc:	69 16       	cp	r6, r25
 1de:	93 e0       	ldi	r25, 0x03	; 3
 1e0:	79 06       	cpc	r7, r25
 1e2:	3c f4       	brge	.+14     	; 0x1f2 <main+0xc0>
		{
			printf("orta derece sikma");
 1e4:	df 92       	push	r13
 1e6:	cf 92       	push	r12
 1e8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <printf>
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	06 c0       	rjmp	.+12     	; 0x1fe <main+0xcc>
		}
		else {
			printf("büyük sikma");
 1f2:	bf 92       	push	r11
 1f4:	af 92       	push	r10
 1f6:	0e 94 64 01 	call	0x2c8	; 0x2c8 <printf>
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1fe:	2f e3       	ldi	r18, 0x3F	; 63
 200:	8d e0       	ldi	r24, 0x0D	; 13
 202:	93 e0       	ldi	r25, 0x03	; 3
 204:	21 50       	subi	r18, 0x01	; 1
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e1 f7       	brne	.-8      	; 0x204 <main+0xd2>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <main+0xdc>
 20e:	00 00       	nop
 210:	b4 cf       	rjmp	.-152    	; 0x17a <main+0x48>

00000212 <__divmodsi4>:
 212:	05 2e       	mov	r0, r21
 214:	97 fb       	bst	r25, 7
 216:	1e f4       	brtc	.+6      	; 0x21e <__divmodsi4+0xc>
 218:	00 94       	com	r0
 21a:	0e 94 20 01 	call	0x240	; 0x240 <__negsi2>
 21e:	57 fd       	sbrc	r21, 7
 220:	07 d0       	rcall	.+14     	; 0x230 <__divmodsi4_neg2>
 222:	0e 94 33 01 	call	0x266	; 0x266 <__udivmodsi4>
 226:	07 fc       	sbrc	r0, 7
 228:	03 d0       	rcall	.+6      	; 0x230 <__divmodsi4_neg2>
 22a:	4e f4       	brtc	.+18     	; 0x23e <__divmodsi4_exit>
 22c:	0c 94 20 01 	jmp	0x240	; 0x240 <__negsi2>

00000230 <__divmodsi4_neg2>:
 230:	50 95       	com	r21
 232:	40 95       	com	r20
 234:	30 95       	com	r19
 236:	21 95       	neg	r18
 238:	3f 4f       	sbci	r19, 0xFF	; 255
 23a:	4f 4f       	sbci	r20, 0xFF	; 255
 23c:	5f 4f       	sbci	r21, 0xFF	; 255

0000023e <__divmodsi4_exit>:
 23e:	08 95       	ret

00000240 <__negsi2>:
 240:	90 95       	com	r25
 242:	80 95       	com	r24
 244:	70 95       	com	r23
 246:	61 95       	neg	r22
 248:	7f 4f       	sbci	r23, 0xFF	; 255
 24a:	8f 4f       	sbci	r24, 0xFF	; 255
 24c:	9f 4f       	sbci	r25, 0xFF	; 255
 24e:	08 95       	ret

00000250 <__muluhisi3>:
 250:	0e 94 55 01 	call	0x2aa	; 0x2aa <__umulhisi3>
 254:	a5 9f       	mul	r26, r21
 256:	90 0d       	add	r25, r0
 258:	b4 9f       	mul	r27, r20
 25a:	90 0d       	add	r25, r0
 25c:	a4 9f       	mul	r26, r20
 25e:	80 0d       	add	r24, r0
 260:	91 1d       	adc	r25, r1
 262:	11 24       	eor	r1, r1
 264:	08 95       	ret

00000266 <__udivmodsi4>:
 266:	a1 e2       	ldi	r26, 0x21	; 33
 268:	1a 2e       	mov	r1, r26
 26a:	aa 1b       	sub	r26, r26
 26c:	bb 1b       	sub	r27, r27
 26e:	fd 01       	movw	r30, r26
 270:	0d c0       	rjmp	.+26     	; 0x28c <__udivmodsi4_ep>

00000272 <__udivmodsi4_loop>:
 272:	aa 1f       	adc	r26, r26
 274:	bb 1f       	adc	r27, r27
 276:	ee 1f       	adc	r30, r30
 278:	ff 1f       	adc	r31, r31
 27a:	a2 17       	cp	r26, r18
 27c:	b3 07       	cpc	r27, r19
 27e:	e4 07       	cpc	r30, r20
 280:	f5 07       	cpc	r31, r21
 282:	20 f0       	brcs	.+8      	; 0x28c <__udivmodsi4_ep>
 284:	a2 1b       	sub	r26, r18
 286:	b3 0b       	sbc	r27, r19
 288:	e4 0b       	sbc	r30, r20
 28a:	f5 0b       	sbc	r31, r21

0000028c <__udivmodsi4_ep>:
 28c:	66 1f       	adc	r22, r22
 28e:	77 1f       	adc	r23, r23
 290:	88 1f       	adc	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	1a 94       	dec	r1
 296:	69 f7       	brne	.-38     	; 0x272 <__udivmodsi4_loop>
 298:	60 95       	com	r22
 29a:	70 95       	com	r23
 29c:	80 95       	com	r24
 29e:	90 95       	com	r25
 2a0:	9b 01       	movw	r18, r22
 2a2:	ac 01       	movw	r20, r24
 2a4:	bd 01       	movw	r22, r26
 2a6:	cf 01       	movw	r24, r30
 2a8:	08 95       	ret

000002aa <__umulhisi3>:
 2aa:	a2 9f       	mul	r26, r18
 2ac:	b0 01       	movw	r22, r0
 2ae:	b3 9f       	mul	r27, r19
 2b0:	c0 01       	movw	r24, r0
 2b2:	a3 9f       	mul	r26, r19
 2b4:	70 0d       	add	r23, r0
 2b6:	81 1d       	adc	r24, r1
 2b8:	11 24       	eor	r1, r1
 2ba:	91 1d       	adc	r25, r1
 2bc:	b2 9f       	mul	r27, r18
 2be:	70 0d       	add	r23, r0
 2c0:	81 1d       	adc	r24, r1
 2c2:	11 24       	eor	r1, r1
 2c4:	91 1d       	adc	r25, r1
 2c6:	08 95       	ret

000002c8 <printf>:
 2c8:	a0 e0       	ldi	r26, 0x00	; 0
 2ca:	b0 e0       	ldi	r27, 0x00	; 0
 2cc:	ea e6       	ldi	r30, 0x6A	; 106
 2ce:	f1 e0       	ldi	r31, 0x01	; 1
 2d0:	0c 94 00 04 	jmp	0x800	; 0x800 <__prologue_saves__+0x20>
 2d4:	fe 01       	movw	r30, r28
 2d6:	35 96       	adiw	r30, 0x05	; 5
 2d8:	61 91       	ld	r22, Z+
 2da:	71 91       	ld	r23, Z+
 2dc:	af 01       	movw	r20, r30
 2de:	80 91 c4 00 	lds	r24, 0x00C4
 2e2:	90 91 c5 00 	lds	r25, 0x00C5
 2e6:	0e 94 78 01 	call	0x2f0	; 0x2f0 <vfprintf>
 2ea:	e2 e0       	ldi	r30, 0x02	; 2
 2ec:	0c 94 1c 04 	jmp	0x838	; 0x838 <__epilogue_restores__+0x20>

000002f0 <vfprintf>:
 2f0:	ac e0       	ldi	r26, 0x0C	; 12
 2f2:	b0 e0       	ldi	r27, 0x00	; 0
 2f4:	ee e7       	ldi	r30, 0x7E	; 126
 2f6:	f1 e0       	ldi	r31, 0x01	; 1
 2f8:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__prologue_saves__>
 2fc:	7c 01       	movw	r14, r24
 2fe:	6b 01       	movw	r12, r22
 300:	8a 01       	movw	r16, r20
 302:	fc 01       	movw	r30, r24
 304:	17 82       	std	Z+7, r1	; 0x07
 306:	16 82       	std	Z+6, r1	; 0x06
 308:	83 81       	ldd	r24, Z+3	; 0x03
 30a:	81 ff       	sbrs	r24, 1
 30c:	bd c1       	rjmp	.+890    	; 0x688 <vfprintf+0x398>
 30e:	ce 01       	movw	r24, r28
 310:	01 96       	adiw	r24, 0x01	; 1
 312:	4c 01       	movw	r8, r24
 314:	f7 01       	movw	r30, r14
 316:	93 81       	ldd	r25, Z+3	; 0x03
 318:	f6 01       	movw	r30, r12
 31a:	93 fd       	sbrc	r25, 3
 31c:	85 91       	lpm	r24, Z+
 31e:	93 ff       	sbrs	r25, 3
 320:	81 91       	ld	r24, Z+
 322:	6f 01       	movw	r12, r30
 324:	88 23       	and	r24, r24
 326:	09 f4       	brne	.+2      	; 0x32a <vfprintf+0x3a>
 328:	ab c1       	rjmp	.+854    	; 0x680 <vfprintf+0x390>
 32a:	85 32       	cpi	r24, 0x25	; 37
 32c:	39 f4       	brne	.+14     	; 0x33c <vfprintf+0x4c>
 32e:	93 fd       	sbrc	r25, 3
 330:	85 91       	lpm	r24, Z+
 332:	93 ff       	sbrs	r25, 3
 334:	81 91       	ld	r24, Z+
 336:	6f 01       	movw	r12, r30
 338:	85 32       	cpi	r24, 0x25	; 37
 33a:	29 f4       	brne	.+10     	; 0x346 <vfprintf+0x56>
 33c:	b7 01       	movw	r22, r14
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 344:	e7 cf       	rjmp	.-50     	; 0x314 <vfprintf+0x24>
 346:	51 2c       	mov	r5, r1
 348:	31 2c       	mov	r3, r1
 34a:	20 e0       	ldi	r18, 0x00	; 0
 34c:	20 32       	cpi	r18, 0x20	; 32
 34e:	a0 f4       	brcc	.+40     	; 0x378 <vfprintf+0x88>
 350:	8b 32       	cpi	r24, 0x2B	; 43
 352:	69 f0       	breq	.+26     	; 0x36e <vfprintf+0x7e>
 354:	30 f4       	brcc	.+12     	; 0x362 <vfprintf+0x72>
 356:	80 32       	cpi	r24, 0x20	; 32
 358:	59 f0       	breq	.+22     	; 0x370 <vfprintf+0x80>
 35a:	83 32       	cpi	r24, 0x23	; 35
 35c:	69 f4       	brne	.+26     	; 0x378 <vfprintf+0x88>
 35e:	20 61       	ori	r18, 0x10	; 16
 360:	2c c0       	rjmp	.+88     	; 0x3ba <vfprintf+0xca>
 362:	8d 32       	cpi	r24, 0x2D	; 45
 364:	39 f0       	breq	.+14     	; 0x374 <vfprintf+0x84>
 366:	80 33       	cpi	r24, 0x30	; 48
 368:	39 f4       	brne	.+14     	; 0x378 <vfprintf+0x88>
 36a:	21 60       	ori	r18, 0x01	; 1
 36c:	26 c0       	rjmp	.+76     	; 0x3ba <vfprintf+0xca>
 36e:	22 60       	ori	r18, 0x02	; 2
 370:	24 60       	ori	r18, 0x04	; 4
 372:	23 c0       	rjmp	.+70     	; 0x3ba <vfprintf+0xca>
 374:	28 60       	ori	r18, 0x08	; 8
 376:	21 c0       	rjmp	.+66     	; 0x3ba <vfprintf+0xca>
 378:	27 fd       	sbrc	r18, 7
 37a:	27 c0       	rjmp	.+78     	; 0x3ca <vfprintf+0xda>
 37c:	30 ed       	ldi	r19, 0xD0	; 208
 37e:	38 0f       	add	r19, r24
 380:	3a 30       	cpi	r19, 0x0A	; 10
 382:	78 f4       	brcc	.+30     	; 0x3a2 <vfprintf+0xb2>
 384:	26 ff       	sbrs	r18, 6
 386:	06 c0       	rjmp	.+12     	; 0x394 <vfprintf+0xa4>
 388:	fa e0       	ldi	r31, 0x0A	; 10
 38a:	5f 9e       	mul	r5, r31
 38c:	30 0d       	add	r19, r0
 38e:	11 24       	eor	r1, r1
 390:	53 2e       	mov	r5, r19
 392:	13 c0       	rjmp	.+38     	; 0x3ba <vfprintf+0xca>
 394:	8a e0       	ldi	r24, 0x0A	; 10
 396:	38 9e       	mul	r3, r24
 398:	30 0d       	add	r19, r0
 39a:	11 24       	eor	r1, r1
 39c:	33 2e       	mov	r3, r19
 39e:	20 62       	ori	r18, 0x20	; 32
 3a0:	0c c0       	rjmp	.+24     	; 0x3ba <vfprintf+0xca>
 3a2:	8e 32       	cpi	r24, 0x2E	; 46
 3a4:	21 f4       	brne	.+8      	; 0x3ae <vfprintf+0xbe>
 3a6:	26 fd       	sbrc	r18, 6
 3a8:	6b c1       	rjmp	.+726    	; 0x680 <vfprintf+0x390>
 3aa:	20 64       	ori	r18, 0x40	; 64
 3ac:	06 c0       	rjmp	.+12     	; 0x3ba <vfprintf+0xca>
 3ae:	8c 36       	cpi	r24, 0x6C	; 108
 3b0:	11 f4       	brne	.+4      	; 0x3b6 <vfprintf+0xc6>
 3b2:	20 68       	ori	r18, 0x80	; 128
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <vfprintf+0xca>
 3b6:	88 36       	cpi	r24, 0x68	; 104
 3b8:	41 f4       	brne	.+16     	; 0x3ca <vfprintf+0xda>
 3ba:	f6 01       	movw	r30, r12
 3bc:	93 fd       	sbrc	r25, 3
 3be:	85 91       	lpm	r24, Z+
 3c0:	93 ff       	sbrs	r25, 3
 3c2:	81 91       	ld	r24, Z+
 3c4:	6f 01       	movw	r12, r30
 3c6:	81 11       	cpse	r24, r1
 3c8:	c1 cf       	rjmp	.-126    	; 0x34c <vfprintf+0x5c>
 3ca:	98 2f       	mov	r25, r24
 3cc:	9f 7d       	andi	r25, 0xDF	; 223
 3ce:	95 54       	subi	r25, 0x45	; 69
 3d0:	93 30       	cpi	r25, 0x03	; 3
 3d2:	28 f4       	brcc	.+10     	; 0x3de <vfprintf+0xee>
 3d4:	0c 5f       	subi	r16, 0xFC	; 252
 3d6:	1f 4f       	sbci	r17, 0xFF	; 255
 3d8:	ff e3       	ldi	r31, 0x3F	; 63
 3da:	f9 83       	std	Y+1, r31	; 0x01
 3dc:	0d c0       	rjmp	.+26     	; 0x3f8 <vfprintf+0x108>
 3de:	83 36       	cpi	r24, 0x63	; 99
 3e0:	31 f0       	breq	.+12     	; 0x3ee <vfprintf+0xfe>
 3e2:	83 37       	cpi	r24, 0x73	; 115
 3e4:	71 f0       	breq	.+28     	; 0x402 <vfprintf+0x112>
 3e6:	83 35       	cpi	r24, 0x53	; 83
 3e8:	09 f0       	breq	.+2      	; 0x3ec <vfprintf+0xfc>
 3ea:	5b c0       	rjmp	.+182    	; 0x4a2 <vfprintf+0x1b2>
 3ec:	22 c0       	rjmp	.+68     	; 0x432 <vfprintf+0x142>
 3ee:	f8 01       	movw	r30, r16
 3f0:	80 81       	ld	r24, Z
 3f2:	89 83       	std	Y+1, r24	; 0x01
 3f4:	0e 5f       	subi	r16, 0xFE	; 254
 3f6:	1f 4f       	sbci	r17, 0xFF	; 255
 3f8:	44 24       	eor	r4, r4
 3fa:	43 94       	inc	r4
 3fc:	51 2c       	mov	r5, r1
 3fe:	54 01       	movw	r10, r8
 400:	15 c0       	rjmp	.+42     	; 0x42c <vfprintf+0x13c>
 402:	38 01       	movw	r6, r16
 404:	f2 e0       	ldi	r31, 0x02	; 2
 406:	6f 0e       	add	r6, r31
 408:	71 1c       	adc	r7, r1
 40a:	f8 01       	movw	r30, r16
 40c:	a0 80       	ld	r10, Z
 40e:	b1 80       	ldd	r11, Z+1	; 0x01
 410:	26 ff       	sbrs	r18, 6
 412:	03 c0       	rjmp	.+6      	; 0x41a <vfprintf+0x12a>
 414:	65 2d       	mov	r22, r5
 416:	70 e0       	ldi	r23, 0x00	; 0
 418:	02 c0       	rjmp	.+4      	; 0x41e <vfprintf+0x12e>
 41a:	6f ef       	ldi	r22, 0xFF	; 255
 41c:	7f ef       	ldi	r23, 0xFF	; 255
 41e:	c5 01       	movw	r24, r10
 420:	2c 87       	std	Y+12, r18	; 0x0c
 422:	0e 94 55 03 	call	0x6aa	; 0x6aa <strnlen>
 426:	2c 01       	movw	r4, r24
 428:	83 01       	movw	r16, r6
 42a:	2c 85       	ldd	r18, Y+12	; 0x0c
 42c:	2f 77       	andi	r18, 0x7F	; 127
 42e:	22 2e       	mov	r2, r18
 430:	17 c0       	rjmp	.+46     	; 0x460 <vfprintf+0x170>
 432:	38 01       	movw	r6, r16
 434:	f2 e0       	ldi	r31, 0x02	; 2
 436:	6f 0e       	add	r6, r31
 438:	71 1c       	adc	r7, r1
 43a:	f8 01       	movw	r30, r16
 43c:	a0 80       	ld	r10, Z
 43e:	b1 80       	ldd	r11, Z+1	; 0x01
 440:	26 ff       	sbrs	r18, 6
 442:	03 c0       	rjmp	.+6      	; 0x44a <vfprintf+0x15a>
 444:	65 2d       	mov	r22, r5
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	02 c0       	rjmp	.+4      	; 0x44e <vfprintf+0x15e>
 44a:	6f ef       	ldi	r22, 0xFF	; 255
 44c:	7f ef       	ldi	r23, 0xFF	; 255
 44e:	c5 01       	movw	r24, r10
 450:	2c 87       	std	Y+12, r18	; 0x0c
 452:	0e 94 4a 03 	call	0x694	; 0x694 <strnlen_P>
 456:	2c 01       	movw	r4, r24
 458:	2c 85       	ldd	r18, Y+12	; 0x0c
 45a:	20 68       	ori	r18, 0x80	; 128
 45c:	22 2e       	mov	r2, r18
 45e:	83 01       	movw	r16, r6
 460:	23 fc       	sbrc	r2, 3
 462:	1b c0       	rjmp	.+54     	; 0x49a <vfprintf+0x1aa>
 464:	83 2d       	mov	r24, r3
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	48 16       	cp	r4, r24
 46a:	59 06       	cpc	r5, r25
 46c:	b0 f4       	brcc	.+44     	; 0x49a <vfprintf+0x1aa>
 46e:	b7 01       	movw	r22, r14
 470:	80 e2       	ldi	r24, 0x20	; 32
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 478:	3a 94       	dec	r3
 47a:	f4 cf       	rjmp	.-24     	; 0x464 <vfprintf+0x174>
 47c:	f5 01       	movw	r30, r10
 47e:	27 fc       	sbrc	r2, 7
 480:	85 91       	lpm	r24, Z+
 482:	27 fe       	sbrs	r2, 7
 484:	81 91       	ld	r24, Z+
 486:	5f 01       	movw	r10, r30
 488:	b7 01       	movw	r22, r14
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 490:	31 10       	cpse	r3, r1
 492:	3a 94       	dec	r3
 494:	f1 e0       	ldi	r31, 0x01	; 1
 496:	4f 1a       	sub	r4, r31
 498:	51 08       	sbc	r5, r1
 49a:	41 14       	cp	r4, r1
 49c:	51 04       	cpc	r5, r1
 49e:	71 f7       	brne	.-36     	; 0x47c <vfprintf+0x18c>
 4a0:	e5 c0       	rjmp	.+458    	; 0x66c <vfprintf+0x37c>
 4a2:	84 36       	cpi	r24, 0x64	; 100
 4a4:	11 f0       	breq	.+4      	; 0x4aa <vfprintf+0x1ba>
 4a6:	89 36       	cpi	r24, 0x69	; 105
 4a8:	39 f5       	brne	.+78     	; 0x4f8 <vfprintf+0x208>
 4aa:	f8 01       	movw	r30, r16
 4ac:	27 ff       	sbrs	r18, 7
 4ae:	07 c0       	rjmp	.+14     	; 0x4be <vfprintf+0x1ce>
 4b0:	60 81       	ld	r22, Z
 4b2:	71 81       	ldd	r23, Z+1	; 0x01
 4b4:	82 81       	ldd	r24, Z+2	; 0x02
 4b6:	93 81       	ldd	r25, Z+3	; 0x03
 4b8:	0c 5f       	subi	r16, 0xFC	; 252
 4ba:	1f 4f       	sbci	r17, 0xFF	; 255
 4bc:	08 c0       	rjmp	.+16     	; 0x4ce <vfprintf+0x1de>
 4be:	60 81       	ld	r22, Z
 4c0:	71 81       	ldd	r23, Z+1	; 0x01
 4c2:	88 27       	eor	r24, r24
 4c4:	77 fd       	sbrc	r23, 7
 4c6:	80 95       	com	r24
 4c8:	98 2f       	mov	r25, r24
 4ca:	0e 5f       	subi	r16, 0xFE	; 254
 4cc:	1f 4f       	sbci	r17, 0xFF	; 255
 4ce:	2f 76       	andi	r18, 0x6F	; 111
 4d0:	b2 2e       	mov	r11, r18
 4d2:	97 ff       	sbrs	r25, 7
 4d4:	09 c0       	rjmp	.+18     	; 0x4e8 <vfprintf+0x1f8>
 4d6:	90 95       	com	r25
 4d8:	80 95       	com	r24
 4da:	70 95       	com	r23
 4dc:	61 95       	neg	r22
 4de:	7f 4f       	sbci	r23, 0xFF	; 255
 4e0:	8f 4f       	sbci	r24, 0xFF	; 255
 4e2:	9f 4f       	sbci	r25, 0xFF	; 255
 4e4:	20 68       	ori	r18, 0x80	; 128
 4e6:	b2 2e       	mov	r11, r18
 4e8:	2a e0       	ldi	r18, 0x0A	; 10
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	a4 01       	movw	r20, r8
 4ee:	0e 94 92 03 	call	0x724	; 0x724 <__ultoa_invert>
 4f2:	a8 2e       	mov	r10, r24
 4f4:	a8 18       	sub	r10, r8
 4f6:	44 c0       	rjmp	.+136    	; 0x580 <vfprintf+0x290>
 4f8:	85 37       	cpi	r24, 0x75	; 117
 4fa:	29 f4       	brne	.+10     	; 0x506 <vfprintf+0x216>
 4fc:	2f 7e       	andi	r18, 0xEF	; 239
 4fe:	b2 2e       	mov	r11, r18
 500:	2a e0       	ldi	r18, 0x0A	; 10
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	25 c0       	rjmp	.+74     	; 0x550 <vfprintf+0x260>
 506:	f2 2f       	mov	r31, r18
 508:	f9 7f       	andi	r31, 0xF9	; 249
 50a:	bf 2e       	mov	r11, r31
 50c:	8f 36       	cpi	r24, 0x6F	; 111
 50e:	c1 f0       	breq	.+48     	; 0x540 <vfprintf+0x250>
 510:	18 f4       	brcc	.+6      	; 0x518 <vfprintf+0x228>
 512:	88 35       	cpi	r24, 0x58	; 88
 514:	79 f0       	breq	.+30     	; 0x534 <vfprintf+0x244>
 516:	b4 c0       	rjmp	.+360    	; 0x680 <vfprintf+0x390>
 518:	80 37       	cpi	r24, 0x70	; 112
 51a:	19 f0       	breq	.+6      	; 0x522 <vfprintf+0x232>
 51c:	88 37       	cpi	r24, 0x78	; 120
 51e:	21 f0       	breq	.+8      	; 0x528 <vfprintf+0x238>
 520:	af c0       	rjmp	.+350    	; 0x680 <vfprintf+0x390>
 522:	2f 2f       	mov	r18, r31
 524:	20 61       	ori	r18, 0x10	; 16
 526:	b2 2e       	mov	r11, r18
 528:	b4 fe       	sbrs	r11, 4
 52a:	0d c0       	rjmp	.+26     	; 0x546 <vfprintf+0x256>
 52c:	8b 2d       	mov	r24, r11
 52e:	84 60       	ori	r24, 0x04	; 4
 530:	b8 2e       	mov	r11, r24
 532:	09 c0       	rjmp	.+18     	; 0x546 <vfprintf+0x256>
 534:	24 ff       	sbrs	r18, 4
 536:	0a c0       	rjmp	.+20     	; 0x54c <vfprintf+0x25c>
 538:	9f 2f       	mov	r25, r31
 53a:	96 60       	ori	r25, 0x06	; 6
 53c:	b9 2e       	mov	r11, r25
 53e:	06 c0       	rjmp	.+12     	; 0x54c <vfprintf+0x25c>
 540:	28 e0       	ldi	r18, 0x08	; 8
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	05 c0       	rjmp	.+10     	; 0x550 <vfprintf+0x260>
 546:	20 e1       	ldi	r18, 0x10	; 16
 548:	30 e0       	ldi	r19, 0x00	; 0
 54a:	02 c0       	rjmp	.+4      	; 0x550 <vfprintf+0x260>
 54c:	20 e1       	ldi	r18, 0x10	; 16
 54e:	32 e0       	ldi	r19, 0x02	; 2
 550:	f8 01       	movw	r30, r16
 552:	b7 fe       	sbrs	r11, 7
 554:	07 c0       	rjmp	.+14     	; 0x564 <vfprintf+0x274>
 556:	60 81       	ld	r22, Z
 558:	71 81       	ldd	r23, Z+1	; 0x01
 55a:	82 81       	ldd	r24, Z+2	; 0x02
 55c:	93 81       	ldd	r25, Z+3	; 0x03
 55e:	0c 5f       	subi	r16, 0xFC	; 252
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	06 c0       	rjmp	.+12     	; 0x570 <vfprintf+0x280>
 564:	60 81       	ld	r22, Z
 566:	71 81       	ldd	r23, Z+1	; 0x01
 568:	80 e0       	ldi	r24, 0x00	; 0
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 5f       	subi	r16, 0xFE	; 254
 56e:	1f 4f       	sbci	r17, 0xFF	; 255
 570:	a4 01       	movw	r20, r8
 572:	0e 94 92 03 	call	0x724	; 0x724 <__ultoa_invert>
 576:	a8 2e       	mov	r10, r24
 578:	a8 18       	sub	r10, r8
 57a:	fb 2d       	mov	r31, r11
 57c:	ff 77       	andi	r31, 0x7F	; 127
 57e:	bf 2e       	mov	r11, r31
 580:	b6 fe       	sbrs	r11, 6
 582:	0b c0       	rjmp	.+22     	; 0x59a <vfprintf+0x2aa>
 584:	2b 2d       	mov	r18, r11
 586:	2e 7f       	andi	r18, 0xFE	; 254
 588:	a5 14       	cp	r10, r5
 58a:	50 f4       	brcc	.+20     	; 0x5a0 <vfprintf+0x2b0>
 58c:	b4 fe       	sbrs	r11, 4
 58e:	0a c0       	rjmp	.+20     	; 0x5a4 <vfprintf+0x2b4>
 590:	b2 fc       	sbrc	r11, 2
 592:	08 c0       	rjmp	.+16     	; 0x5a4 <vfprintf+0x2b4>
 594:	2b 2d       	mov	r18, r11
 596:	2e 7e       	andi	r18, 0xEE	; 238
 598:	05 c0       	rjmp	.+10     	; 0x5a4 <vfprintf+0x2b4>
 59a:	7a 2c       	mov	r7, r10
 59c:	2b 2d       	mov	r18, r11
 59e:	03 c0       	rjmp	.+6      	; 0x5a6 <vfprintf+0x2b6>
 5a0:	7a 2c       	mov	r7, r10
 5a2:	01 c0       	rjmp	.+2      	; 0x5a6 <vfprintf+0x2b6>
 5a4:	75 2c       	mov	r7, r5
 5a6:	24 ff       	sbrs	r18, 4
 5a8:	0d c0       	rjmp	.+26     	; 0x5c4 <vfprintf+0x2d4>
 5aa:	fe 01       	movw	r30, r28
 5ac:	ea 0d       	add	r30, r10
 5ae:	f1 1d       	adc	r31, r1
 5b0:	80 81       	ld	r24, Z
 5b2:	80 33       	cpi	r24, 0x30	; 48
 5b4:	11 f4       	brne	.+4      	; 0x5ba <vfprintf+0x2ca>
 5b6:	29 7e       	andi	r18, 0xE9	; 233
 5b8:	09 c0       	rjmp	.+18     	; 0x5cc <vfprintf+0x2dc>
 5ba:	22 ff       	sbrs	r18, 2
 5bc:	06 c0       	rjmp	.+12     	; 0x5ca <vfprintf+0x2da>
 5be:	73 94       	inc	r7
 5c0:	73 94       	inc	r7
 5c2:	04 c0       	rjmp	.+8      	; 0x5cc <vfprintf+0x2dc>
 5c4:	82 2f       	mov	r24, r18
 5c6:	86 78       	andi	r24, 0x86	; 134
 5c8:	09 f0       	breq	.+2      	; 0x5cc <vfprintf+0x2dc>
 5ca:	73 94       	inc	r7
 5cc:	23 fd       	sbrc	r18, 3
 5ce:	13 c0       	rjmp	.+38     	; 0x5f6 <vfprintf+0x306>
 5d0:	20 ff       	sbrs	r18, 0
 5d2:	06 c0       	rjmp	.+12     	; 0x5e0 <vfprintf+0x2f0>
 5d4:	5a 2c       	mov	r5, r10
 5d6:	73 14       	cp	r7, r3
 5d8:	18 f4       	brcc	.+6      	; 0x5e0 <vfprintf+0x2f0>
 5da:	53 0c       	add	r5, r3
 5dc:	57 18       	sub	r5, r7
 5de:	73 2c       	mov	r7, r3
 5e0:	73 14       	cp	r7, r3
 5e2:	68 f4       	brcc	.+26     	; 0x5fe <vfprintf+0x30e>
 5e4:	b7 01       	movw	r22, r14
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	2c 87       	std	Y+12, r18	; 0x0c
 5ec:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 5f0:	73 94       	inc	r7
 5f2:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f4:	f5 cf       	rjmp	.-22     	; 0x5e0 <vfprintf+0x2f0>
 5f6:	73 14       	cp	r7, r3
 5f8:	10 f4       	brcc	.+4      	; 0x5fe <vfprintf+0x30e>
 5fa:	37 18       	sub	r3, r7
 5fc:	01 c0       	rjmp	.+2      	; 0x600 <vfprintf+0x310>
 5fe:	31 2c       	mov	r3, r1
 600:	24 ff       	sbrs	r18, 4
 602:	12 c0       	rjmp	.+36     	; 0x628 <vfprintf+0x338>
 604:	b7 01       	movw	r22, r14
 606:	80 e3       	ldi	r24, 0x30	; 48
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	2c 87       	std	Y+12, r18	; 0x0c
 60c:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 610:	2c 85       	ldd	r18, Y+12	; 0x0c
 612:	22 ff       	sbrs	r18, 2
 614:	17 c0       	rjmp	.+46     	; 0x644 <vfprintf+0x354>
 616:	21 ff       	sbrs	r18, 1
 618:	03 c0       	rjmp	.+6      	; 0x620 <vfprintf+0x330>
 61a:	88 e5       	ldi	r24, 0x58	; 88
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	02 c0       	rjmp	.+4      	; 0x624 <vfprintf+0x334>
 620:	88 e7       	ldi	r24, 0x78	; 120
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	b7 01       	movw	r22, r14
 626:	0c c0       	rjmp	.+24     	; 0x640 <vfprintf+0x350>
 628:	82 2f       	mov	r24, r18
 62a:	86 78       	andi	r24, 0x86	; 134
 62c:	59 f0       	breq	.+22     	; 0x644 <vfprintf+0x354>
 62e:	21 fd       	sbrc	r18, 1
 630:	02 c0       	rjmp	.+4      	; 0x636 <vfprintf+0x346>
 632:	80 e2       	ldi	r24, 0x20	; 32
 634:	01 c0       	rjmp	.+2      	; 0x638 <vfprintf+0x348>
 636:	8b e2       	ldi	r24, 0x2B	; 43
 638:	27 fd       	sbrc	r18, 7
 63a:	8d e2       	ldi	r24, 0x2D	; 45
 63c:	b7 01       	movw	r22, r14
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 644:	a5 14       	cp	r10, r5
 646:	38 f4       	brcc	.+14     	; 0x656 <vfprintf+0x366>
 648:	b7 01       	movw	r22, r14
 64a:	80 e3       	ldi	r24, 0x30	; 48
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 652:	5a 94       	dec	r5
 654:	f7 cf       	rjmp	.-18     	; 0x644 <vfprintf+0x354>
 656:	aa 94       	dec	r10
 658:	f4 01       	movw	r30, r8
 65a:	ea 0d       	add	r30, r10
 65c:	f1 1d       	adc	r31, r1
 65e:	80 81       	ld	r24, Z
 660:	b7 01       	movw	r22, r14
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 668:	a1 10       	cpse	r10, r1
 66a:	f5 cf       	rjmp	.-22     	; 0x656 <vfprintf+0x366>
 66c:	33 20       	and	r3, r3
 66e:	09 f4       	brne	.+2      	; 0x672 <vfprintf+0x382>
 670:	51 ce       	rjmp	.-862    	; 0x314 <vfprintf+0x24>
 672:	b7 01       	movw	r22, r14
 674:	80 e2       	ldi	r24, 0x20	; 32
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 67c:	3a 94       	dec	r3
 67e:	f6 cf       	rjmp	.-20     	; 0x66c <vfprintf+0x37c>
 680:	f7 01       	movw	r30, r14
 682:	86 81       	ldd	r24, Z+6	; 0x06
 684:	97 81       	ldd	r25, Z+7	; 0x07
 686:	02 c0       	rjmp	.+4      	; 0x68c <vfprintf+0x39c>
 688:	8f ef       	ldi	r24, 0xFF	; 255
 68a:	9f ef       	ldi	r25, 0xFF	; 255
 68c:	2c 96       	adiw	r28, 0x0c	; 12
 68e:	e2 e1       	ldi	r30, 0x12	; 18
 690:	0c 94 0c 04 	jmp	0x818	; 0x818 <__epilogue_restores__>

00000694 <strnlen_P>:
 694:	fc 01       	movw	r30, r24
 696:	05 90       	lpm	r0, Z+
 698:	61 50       	subi	r22, 0x01	; 1
 69a:	70 40       	sbci	r23, 0x00	; 0
 69c:	01 10       	cpse	r0, r1
 69e:	d8 f7       	brcc	.-10     	; 0x696 <strnlen_P+0x2>
 6a0:	80 95       	com	r24
 6a2:	90 95       	com	r25
 6a4:	8e 0f       	add	r24, r30
 6a6:	9f 1f       	adc	r25, r31
 6a8:	08 95       	ret

000006aa <strnlen>:
 6aa:	fc 01       	movw	r30, r24
 6ac:	61 50       	subi	r22, 0x01	; 1
 6ae:	70 40       	sbci	r23, 0x00	; 0
 6b0:	01 90       	ld	r0, Z+
 6b2:	01 10       	cpse	r0, r1
 6b4:	d8 f7       	brcc	.-10     	; 0x6ac <strnlen+0x2>
 6b6:	80 95       	com	r24
 6b8:	90 95       	com	r25
 6ba:	8e 0f       	add	r24, r30
 6bc:	9f 1f       	adc	r25, r31
 6be:	08 95       	ret

000006c0 <fputc>:
 6c0:	0f 93       	push	r16
 6c2:	1f 93       	push	r17
 6c4:	cf 93       	push	r28
 6c6:	df 93       	push	r29
 6c8:	18 2f       	mov	r17, r24
 6ca:	09 2f       	mov	r16, r25
 6cc:	eb 01       	movw	r28, r22
 6ce:	8b 81       	ldd	r24, Y+3	; 0x03
 6d0:	81 fd       	sbrc	r24, 1
 6d2:	03 c0       	rjmp	.+6      	; 0x6da <fputc+0x1a>
 6d4:	8f ef       	ldi	r24, 0xFF	; 255
 6d6:	9f ef       	ldi	r25, 0xFF	; 255
 6d8:	20 c0       	rjmp	.+64     	; 0x71a <fputc+0x5a>
 6da:	82 ff       	sbrs	r24, 2
 6dc:	10 c0       	rjmp	.+32     	; 0x6fe <fputc+0x3e>
 6de:	4e 81       	ldd	r20, Y+6	; 0x06
 6e0:	5f 81       	ldd	r21, Y+7	; 0x07
 6e2:	2c 81       	ldd	r18, Y+4	; 0x04
 6e4:	3d 81       	ldd	r19, Y+5	; 0x05
 6e6:	42 17       	cp	r20, r18
 6e8:	53 07       	cpc	r21, r19
 6ea:	7c f4       	brge	.+30     	; 0x70a <fputc+0x4a>
 6ec:	e8 81       	ld	r30, Y
 6ee:	f9 81       	ldd	r31, Y+1	; 0x01
 6f0:	9f 01       	movw	r18, r30
 6f2:	2f 5f       	subi	r18, 0xFF	; 255
 6f4:	3f 4f       	sbci	r19, 0xFF	; 255
 6f6:	39 83       	std	Y+1, r19	; 0x01
 6f8:	28 83       	st	Y, r18
 6fa:	10 83       	st	Z, r17
 6fc:	06 c0       	rjmp	.+12     	; 0x70a <fputc+0x4a>
 6fe:	e8 85       	ldd	r30, Y+8	; 0x08
 700:	f9 85       	ldd	r31, Y+9	; 0x09
 702:	81 2f       	mov	r24, r17
 704:	09 95       	icall
 706:	89 2b       	or	r24, r25
 708:	29 f7       	brne	.-54     	; 0x6d4 <fputc+0x14>
 70a:	2e 81       	ldd	r18, Y+6	; 0x06
 70c:	3f 81       	ldd	r19, Y+7	; 0x07
 70e:	2f 5f       	subi	r18, 0xFF	; 255
 710:	3f 4f       	sbci	r19, 0xFF	; 255
 712:	3f 83       	std	Y+7, r19	; 0x07
 714:	2e 83       	std	Y+6, r18	; 0x06
 716:	81 2f       	mov	r24, r17
 718:	90 2f       	mov	r25, r16
 71a:	df 91       	pop	r29
 71c:	cf 91       	pop	r28
 71e:	1f 91       	pop	r17
 720:	0f 91       	pop	r16
 722:	08 95       	ret

00000724 <__ultoa_invert>:
 724:	fa 01       	movw	r30, r20
 726:	aa 27       	eor	r26, r26
 728:	28 30       	cpi	r18, 0x08	; 8
 72a:	51 f1       	breq	.+84     	; 0x780 <__ultoa_invert+0x5c>
 72c:	20 31       	cpi	r18, 0x10	; 16
 72e:	81 f1       	breq	.+96     	; 0x790 <__ultoa_invert+0x6c>
 730:	e8 94       	clt
 732:	6f 93       	push	r22
 734:	6e 7f       	andi	r22, 0xFE	; 254
 736:	6e 5f       	subi	r22, 0xFE	; 254
 738:	7f 4f       	sbci	r23, 0xFF	; 255
 73a:	8f 4f       	sbci	r24, 0xFF	; 255
 73c:	9f 4f       	sbci	r25, 0xFF	; 255
 73e:	af 4f       	sbci	r26, 0xFF	; 255
 740:	b1 e0       	ldi	r27, 0x01	; 1
 742:	3e d0       	rcall	.+124    	; 0x7c0 <__ultoa_invert+0x9c>
 744:	b4 e0       	ldi	r27, 0x04	; 4
 746:	3c d0       	rcall	.+120    	; 0x7c0 <__ultoa_invert+0x9c>
 748:	67 0f       	add	r22, r23
 74a:	78 1f       	adc	r23, r24
 74c:	89 1f       	adc	r24, r25
 74e:	9a 1f       	adc	r25, r26
 750:	a1 1d       	adc	r26, r1
 752:	68 0f       	add	r22, r24
 754:	79 1f       	adc	r23, r25
 756:	8a 1f       	adc	r24, r26
 758:	91 1d       	adc	r25, r1
 75a:	a1 1d       	adc	r26, r1
 75c:	6a 0f       	add	r22, r26
 75e:	71 1d       	adc	r23, r1
 760:	81 1d       	adc	r24, r1
 762:	91 1d       	adc	r25, r1
 764:	a1 1d       	adc	r26, r1
 766:	20 d0       	rcall	.+64     	; 0x7a8 <__ultoa_invert+0x84>
 768:	09 f4       	brne	.+2      	; 0x76c <__ultoa_invert+0x48>
 76a:	68 94       	set
 76c:	3f 91       	pop	r19
 76e:	2a e0       	ldi	r18, 0x0A	; 10
 770:	26 9f       	mul	r18, r22
 772:	11 24       	eor	r1, r1
 774:	30 19       	sub	r19, r0
 776:	30 5d       	subi	r19, 0xD0	; 208
 778:	31 93       	st	Z+, r19
 77a:	de f6       	brtc	.-74     	; 0x732 <__ultoa_invert+0xe>
 77c:	cf 01       	movw	r24, r30
 77e:	08 95       	ret
 780:	46 2f       	mov	r20, r22
 782:	47 70       	andi	r20, 0x07	; 7
 784:	40 5d       	subi	r20, 0xD0	; 208
 786:	41 93       	st	Z+, r20
 788:	b3 e0       	ldi	r27, 0x03	; 3
 78a:	0f d0       	rcall	.+30     	; 0x7aa <__ultoa_invert+0x86>
 78c:	c9 f7       	brne	.-14     	; 0x780 <__ultoa_invert+0x5c>
 78e:	f6 cf       	rjmp	.-20     	; 0x77c <__ultoa_invert+0x58>
 790:	46 2f       	mov	r20, r22
 792:	4f 70       	andi	r20, 0x0F	; 15
 794:	40 5d       	subi	r20, 0xD0	; 208
 796:	4a 33       	cpi	r20, 0x3A	; 58
 798:	18 f0       	brcs	.+6      	; 0x7a0 <__ultoa_invert+0x7c>
 79a:	49 5d       	subi	r20, 0xD9	; 217
 79c:	31 fd       	sbrc	r19, 1
 79e:	40 52       	subi	r20, 0x20	; 32
 7a0:	41 93       	st	Z+, r20
 7a2:	02 d0       	rcall	.+4      	; 0x7a8 <__ultoa_invert+0x84>
 7a4:	a9 f7       	brne	.-22     	; 0x790 <__ultoa_invert+0x6c>
 7a6:	ea cf       	rjmp	.-44     	; 0x77c <__ultoa_invert+0x58>
 7a8:	b4 e0       	ldi	r27, 0x04	; 4
 7aa:	a6 95       	lsr	r26
 7ac:	97 95       	ror	r25
 7ae:	87 95       	ror	r24
 7b0:	77 95       	ror	r23
 7b2:	67 95       	ror	r22
 7b4:	ba 95       	dec	r27
 7b6:	c9 f7       	brne	.-14     	; 0x7aa <__ultoa_invert+0x86>
 7b8:	00 97       	sbiw	r24, 0x00	; 0
 7ba:	61 05       	cpc	r22, r1
 7bc:	71 05       	cpc	r23, r1
 7be:	08 95       	ret
 7c0:	9b 01       	movw	r18, r22
 7c2:	ac 01       	movw	r20, r24
 7c4:	0a 2e       	mov	r0, r26
 7c6:	06 94       	lsr	r0
 7c8:	57 95       	ror	r21
 7ca:	47 95       	ror	r20
 7cc:	37 95       	ror	r19
 7ce:	27 95       	ror	r18
 7d0:	ba 95       	dec	r27
 7d2:	c9 f7       	brne	.-14     	; 0x7c6 <__ultoa_invert+0xa2>
 7d4:	62 0f       	add	r22, r18
 7d6:	73 1f       	adc	r23, r19
 7d8:	84 1f       	adc	r24, r20
 7da:	95 1f       	adc	r25, r21
 7dc:	a0 1d       	adc	r26, r0
 7de:	08 95       	ret

000007e0 <__prologue_saves__>:
 7e0:	2f 92       	push	r2
 7e2:	3f 92       	push	r3
 7e4:	4f 92       	push	r4
 7e6:	5f 92       	push	r5
 7e8:	6f 92       	push	r6
 7ea:	7f 92       	push	r7
 7ec:	8f 92       	push	r8
 7ee:	9f 92       	push	r9
 7f0:	af 92       	push	r10
 7f2:	bf 92       	push	r11
 7f4:	cf 92       	push	r12
 7f6:	df 92       	push	r13
 7f8:	ef 92       	push	r14
 7fa:	ff 92       	push	r15
 7fc:	0f 93       	push	r16
 7fe:	1f 93       	push	r17
 800:	cf 93       	push	r28
 802:	df 93       	push	r29
 804:	cd b7       	in	r28, 0x3d	; 61
 806:	de b7       	in	r29, 0x3e	; 62
 808:	ca 1b       	sub	r28, r26
 80a:	db 0b       	sbc	r29, r27
 80c:	0f b6       	in	r0, 0x3f	; 63
 80e:	f8 94       	cli
 810:	de bf       	out	0x3e, r29	; 62
 812:	0f be       	out	0x3f, r0	; 63
 814:	cd bf       	out	0x3d, r28	; 61
 816:	09 94       	ijmp

00000818 <__epilogue_restores__>:
 818:	2a 88       	ldd	r2, Y+18	; 0x12
 81a:	39 88       	ldd	r3, Y+17	; 0x11
 81c:	48 88       	ldd	r4, Y+16	; 0x10
 81e:	5f 84       	ldd	r5, Y+15	; 0x0f
 820:	6e 84       	ldd	r6, Y+14	; 0x0e
 822:	7d 84       	ldd	r7, Y+13	; 0x0d
 824:	8c 84       	ldd	r8, Y+12	; 0x0c
 826:	9b 84       	ldd	r9, Y+11	; 0x0b
 828:	aa 84       	ldd	r10, Y+10	; 0x0a
 82a:	b9 84       	ldd	r11, Y+9	; 0x09
 82c:	c8 84       	ldd	r12, Y+8	; 0x08
 82e:	df 80       	ldd	r13, Y+7	; 0x07
 830:	ee 80       	ldd	r14, Y+6	; 0x06
 832:	fd 80       	ldd	r15, Y+5	; 0x05
 834:	0c 81       	ldd	r16, Y+4	; 0x04
 836:	1b 81       	ldd	r17, Y+3	; 0x03
 838:	aa 81       	ldd	r26, Y+2	; 0x02
 83a:	b9 81       	ldd	r27, Y+1	; 0x01
 83c:	ce 0f       	add	r28, r30
 83e:	d1 1d       	adc	r29, r1
 840:	0f b6       	in	r0, 0x3f	; 63
 842:	f8 94       	cli
 844:	de bf       	out	0x3e, r29	; 62
 846:	0f be       	out	0x3f, r0	; 63
 848:	cd bf       	out	0x3d, r28	; 61
 84a:	ed 01       	movw	r28, r26
 84c:	08 95       	ret

0000084e <_exit>:
 84e:	f8 94       	cli

00000850 <__stop_program>:
 850:	ff cf       	rjmp	.-2      	; 0x850 <__stop_program>
